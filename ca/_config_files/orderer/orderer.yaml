################################################################################
#
#   SECTION: General
#   - Configuration that applies across all orderer types
#
################################################################################
General:
  # Ledger Type: The ledger type to provide to the orderers.
  #LedgerType: file

  # Listen address: The IP on which to bind to listen.
  ListenAddress: 0.0.0.0

  # Listen port: The port on which to listen for incoming connections.
  ListenPort: 7050

  LocalMSPID: Furnitures_Makers

  LocalMSPDir: /etc/hyperledger/msp

  BootstrapMethod: none

  # TLS settings for the GRPC server.
  TLS:
    Enabled: true
    PrivateKey: /etc/hyperledger/msp/tls/keystore/key.pem
    Certificate: /etc/hyperledger/msp/tls/signcerts/cert.pem
    RootCAs:
      - /etc/hyperledger/msp/tls/tlscacerts/tls-ca-cert.pem
    ClientAuthRequired: true
    ClientRootCAs:
      - /etc/hyperledger/_shared_certs/woodsupply-msp/tlscacerts/tls-ca-cert.pem
      - /etc/hyperledger/_shared_certs/yachtsales-msp/tlscacerts/tls-ca-cert.pem
      - /etc/hyperledger/_shared_certs/furnituresmakers-msp/tlscacerts/tls-ca-cert.pem
      #- /var/hyperledger/orderer/tls/ca.crt

  # Keepalive settings for the GRPC server.
  Keepalive:
    # ServerMinInterval is the minimum permitted time between client pings.
    # If clients send pings more frequently, the server will
    # disconnect them.
    ServerMinInterval: 50s
    # ServerInterval is the time between pings to clients.
    ServerInterval: 7200s
    # ServerTimeout is the duration the server waits for a response from
    # a client before closing the connection.
    ServerTimeout: 20s


  # Authentication contains configuration parameters related to authenticating
  # client messages
  Authentication:
    # the acceptable difference between the current server time and the
    # client's time as specified in a client request message
    TimeWindow: 15m

  # Cluster settings for ordering service nodes that communicate with other ordering service nodes
  # such as Raft based ordering service.
  Cluster:
    # SendBufferSize is the maximum number of messages in the egress buffer.
    # Consensus messages are dropped if the buffer is full, and transaction
    # messages are waiting for space to be freed.
    SendBufferSize: 10
    # ClientCertificate governs the file location of the client TLS certificate
    # used to establish mutual TLS connections with other ordering service nodes.
    ClientCertificate: /etc/hyperledger/msp/tls/signcerts/cert.pem
    # ClientPrivateKey governs the file location of the private key of the client TLS certificate.
    ClientPrivateKey: /etc/hyperledger/msp/tls/keystore/key.pem
    # The below 4 properties should be either set together, or be unset together.
    # If they are set, then the orderer node uses a separate listener for intra-cluster
    # communication. If they are unset, then the general orderer listener is used.
    # This is useful if you want to use a different TLS server certificates on the
    # client-facing and the intra-cluster listeners.

    # ListenPort defines the port on which the cluster listens to connections.
    ListenPort:
    # ListenAddress defines the IP on which to listen to intra-cluster communication.
    ListenAddress:
    # ServerCertificate defines the file location of the server TLS certificate used for intra-cluster
    # communication.
    ServerCertificate:
    # ServerPrivateKey defines the file location of the private key of the TLS certificate.
    ServerPrivateKey:

  BCCSP:
    # Setup to use the Software CSP
    Default: SW
    SW:
      HASH: SHA2
      Security: 256
      # Using the default 'LocalMSPDir/keystore'
      FileKeyStore:
        Keystore:


  ################################################################################
  #
  #   SECTION: File Ledger
  #
  #   - This section applies to the configuration of the file or json ledgers.
  #
  ################################################################################
FileLedger:

    # Location: The directory to store the blocks in.
    # NOTE: If this is unset, a new temporary location will be chosen every time
    # the orderer is restarted, using the prefix specified by Prefix.
    Location: /etc/hyperledger/ledger

    # The prefix to use when generating a ledger directory in temporary space.
    # Otherwise, this value is ignored.
    Prefix: hyperledger-fabric-ordererledger



################################################################################
#
#   SECTION: Operations
#   - Configuration for the operations endpoint of the orderer
#
################################################################################
Operations:
  ListenAddress: 127.0.0.1:8443

  # TLS configuration for the operations endpoint
  TLS:
    # TLS enabled
    Enabled: false

    # Certificate is the location of the PEM encoded TLS certificate
    Certificate:

    # PrivateKey points to the location of the PEM-encoded key
    PrivateKey:

    # Require client certificate authentication to access all resources
    ClientAuthRequired: false

    # Paths to PEM encoded ca certificates to trust for client authentication
    RootCAs: [ ]
  # Metrics provider is one of statsd, prometheus, or disabled
Metrics:
  Provider: disabled
  Statsd:
    Network: udp
    Address: 127.0.0.1:8125
    WriteInterval: 10s
    Prefix: orderer


ChannelParticipation:
  # Channel participation API is enabled.
  Enabled: true

  # The maximum size of the request body when joining a channel.
  MaxRequestBodySize: 1 MB
################################################################################
#
#   SECTION: Consensus
#   - Configuration for the consensus type the orderer supports.
#
################################################################################
Consensus:
  # The type of consensus mechanism.
  Type: etcdraft

  # The allowed key-value pairs here depend on consensus plugin. For etcd/raft,
  # we use following options:

  # WALDir specifies the location at which Write Ahead Logs for etcd/raft are
  # stored. Each channel will have its own subdir named after channel ID.
  WALDir: /var/hyperledger/production/orderer/etcdraft/wal

  # SnapDir specifies the location at which snapshots for etcd/raft are
  # stored. Each channel will have its own subdir named after channel ID.
  SnapDir: /var/hyperledger/production/orderer/etcdraft/snapshot

  # Configuration specific to etcd/raft consensus.
  #etcdraft:
  #  # The consenters for the consensus.
  #  Consenters:
  #    - Host: orderer0.furnituresmakers.com
  #      Port: 7050
  ##      ClientTLSCert: /var/hyperledger/orderer/tls/orderer1_furnituresmakers_client.crt
  #      ServerTLSCert: /var/hyperledger/orderer/tls/orderer1_furnituresmakers_server.crt
  #    - Host: orderer0.woodsupply.com
  #      Port: 7050
  #      ClientTLSCert: /var/hyperledger/orderer/tls/orderer1_woodsupply_client.crt
  ##      ServerTLSCert: /var/hyperledger/orderer/tls/orderer1_woodsupply_server.crt
  #    - Host: orderer0.yachtsales.com
  #      Port: 7050
  #      ClientTLSCert: /var/hyperledger/orderer/tls/orderer1_yachtsales_client.crt
  #      ServerTLSCert: /var/hyperledger/orderer/tls/orderer1_yachtsales_server.crt

  #  # Options for the Raft consensus.
  #  Options:
  #    TickInterval: 500ms
  #    ElectionTick: 10
  #    HeartbeatTick: 1
  #    MaxInflightBlocks: 5
  #    SnapshotIntervalSize: 10 MB
Admin:
  # host and port for the admin server
  ListenAddress: 0.0.0.0:9443

  # TLS configuration for the admin endpoint
  TLS:
    # TLS enabled
    Enabled: true

    # Certificate is the location of the PEM encoded TLS certificate
    Certificate: /etc/hyperledger/msp/tls/signcerts/cert.pem

    # PrivateKey points to the location of the PEM-encoded key
    PrivateKey: /etc/hyperledger/msp/tls/keystore/key.pem

    # Most admin service endpoints require client authentication when TLS
    # is enabled. ClientAuthRequired requires client certificate authentication
    # at the TLS layer to access all resources.
    #
    # NOTE: When TLS is enabled, the admin endpoint requires mutual TLS. The
    # orderer will panic on startup if this value is set to false.
    ClientAuthRequired: true

    # Paths to PEM encoded ca certificates to trust for client authentication
    ClientRootCAs:
      - /etc/hyperledger/_shared_certs/furnituresmakers-msp/admin-client/client-tls-ca-cert.pem
